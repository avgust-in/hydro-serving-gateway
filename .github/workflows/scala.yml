name: ci
on:
  push:
    branches:
      - master  
  pull_request:
    
jobs:
  Debug:
    runs-on: ubuntu-latest
    steps:
      - name: Check ref output
        run: echo ${{ github.ref }}
        
  Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore cache
        id: restore-cache
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      
      - name: Setup scala
        if: steps.restore-cache.ouputs.cache-hit != 'true'
        uses: olafurpg/setup-scala@v10
          
      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: "sbt initialize"
        
      - name: Store new cache
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
                
  Test:
    runs-on: ubuntu-latest
    needs: [Setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup scala
        uses: olafurpg/setup-scala@v10
        
      - name: Restore cache
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
          
      - name: Run tests
        run: "sbt test"
        
  Static_analysis:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        with:
          args: >
            -Dsonar.verbose=true
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  
  Build_and_publish:
    if: github.event_name == 'push'
    needs: [Test, Static_analysis]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup scala
      uses: olafurpg/setup-scala@v10
      
    - name: Restore cache
      uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        
    - name: Build image
      run: "sbt -DappVersion=${{ github.sha }} docker"
      
    - name: Docker Login
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
    - name: Retag image
      run: "docker tag hydrosphere/serving-gateway:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/serving-gateway:${{ github.sha }}"
      
    - name: Push image
      run: "docker push ${{ secrets.DOCKERHUB_USERNAME }}/serving-gateway:${{ github.sha }}"
